400 x 400 grid can run at 60fps on my laptop.


Module-based:
	allocation (of library modules)
	binding	   (operations to modules)
	schedule   (operation execution)
	placement  (of modules)
	routing

### My BioAssay JSON Example ###

{
	"name"  : "PCR",
	"1" : {
		"type" : "input",
		"substance" : "water"
	},
	"2" : {
		"type" : "input",
		"substance" : "alcohol"
	},
	"3" : {
		"type" : "mix",
		"input" : [ "1" ,  "2" ]
	},
	"4" : {
		"type" : "output",
		"input" : [ "3" ]
	}
}

### My Library Example ###

{
	"name" : "a lib",
	{
		"name" : "heater",
		"configs" : [
			{
				"width" : "4",
				"height" : "3",
				"duration" : "22"
			},
			{
				"width" : "4",
				"height" : "4",
				"duration" : "14"
			},
		]
	},
	{
		"name" : "X detector",
		"configs" : [
			{
				"width" : "2",
				"height" : "2",
				"duration" : "4" 
			}
		]
	},  
}


















Droplet:
	at



findNextActions():
	for operation in operations:
		# queueAction()
		if operation.type == "merge":
			d1 = operation.d1
			d2 = operation.d2
			
			moves = []
			for move in maybeMoves:
				next1 = d1.at + move
				
				for do in droplets:
					if !okStatic(d1, do) | !okDynamic(d1, do):
						continue move
			
				moves.add(move)	
				
			

snap():
	for action in actions:
		# execute(operation)
		

compute():
	findNextActions()
	snap()
